openapi: 3.0.1
info:
  title: OpenApi specification
  description: OpenApi documentation
  contact:
    name: Diego
    url: https://portfolio-diegobp.netlify.app
    email: diegobpdev@gmail.com
  version: '1.0'
servers:
  - url: http://localhost:8080
    description: Docker Local ENV
paths:
  /planets:
    get:
      tags:
        - planet-controller
      operationId: findAll
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Planet'
    post:
      tags:
        - planet-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanetDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Planet'
  /planets/name/{name}:
    get:
      tags:
        - planet-controller
      operationId: findByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Planet'
    delete:
      tags:
        - planet-controller
      operationId: deleteByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Planet'
  /planets/id/{id}:
    get:
      tags:
        - planet-controller
      operationId: findById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Planet'
    delete:
      tags:
        - planet-controller
      operationId: deleteById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Planet'
components:
  schemas:
    PlanetDTO:
      required:
        - climate
        - land
        - name
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 0
          type: string
        climate:
          maxLength: 50
          minLength: 0
          type: string
        land:
          maxLength: 50
          minLength: 0
          type: string
    Planet:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        climate:
          type: string
        land:
          type: string
        filmAppearancesCount:
          type: integer
          format: int32
